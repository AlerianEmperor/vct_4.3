#version 430

in GSOutput
{
	vec3 texcoord0;
	vec3 offset;
} gs_out;

out vec4 fragDataOut0; // color

uniform sampler3D sampler0; // +X
uniform sampler3D sampler1; // -X
uniform sampler3D sampler2; // +Y
uniform sampler3D sampler3; // -Y
uniform sampler3D sampler4; // +Z
uniform sampler3D sampler5; // -Z


// dir the direction from the center of the voxel outward
// dir should be normalized
vec4 voxelFetch(vec3 pos, vec3 dir)
{
	float lod = 0.00;

	vec4 sampleX =
		dir.x < 0.0
		? textureLod(sampler0, pos, lod)
		: textureLod(sampler1, pos, lod);
	
	vec4 sampleY =
		dir.y < 0.0
		? textureLod(sampler2, pos, lod)
		: textureLod(sampler3, pos, lod);
	
	vec4 sampleZ =
		dir.z < 0.0
		? textureLod(sampler4, pos, lod)
		: textureLod(sampler5, pos, lod);
	
	vec3 sampleWeights = abs(dir);
	// ignore empty samples?
	// makes sense in the debug view, but probably not when actually tracing
	/*if (sampleX.w == 0.0)
		sampleWeights.x = 0.0;
	if (sampleY.w == 0.0)
		sampleWeights.y = 0.0;
	if (sampleZ.w == 0.0)
		sampleWeights.z = 0.0;*/
	
	float invSampleMag = 1.0 / (dot(sampleWeights, vec3(1.0)) + .0001);
	
	vec4 filtered = 
		sampleX * sampleWeights.x
		+ sampleY * sampleWeights.y
		+ sampleZ * sampleWeights.z;
	filtered *= invSampleMag;

	return filtered;
}

void main()
{
	vec4 diffuse = voxelFetch(gs_out.texcoord0, normalize(gs_out.offset));
	if (diffuse.a <= 0.0)
		discard;
	
	fragDataOut0 = diffuse;
	fragDataOut0.a = 1.0;
}
